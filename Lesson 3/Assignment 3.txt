Assignment 3

This assignment has 2 parts.

I would like to know how you are all progressing on these exercises. As you complete them,
please email me your work. You can find your projects in the following directory:

C:\Users\YOUR_USERNAME\eclipse-workspace
OR
C:\Users\YOUR_USERNAME\workspace

Zip your project folder and send it to me at beamer159@gmail.com

----------------------------------------------------------------
Part 1

In class, we created a program that could randomize a list of integers. Now, I want you
to add a sorting algorithm to the program so that it sorts the randomized List. However,
there is one catch: I am providing you with the main function. You must use this main
function exactly as I wrote it. It is then your responsibility to write the functions
that I call in the main function.

Furthermore, I want you to print out your intermediate steps when sorting the List. See
the sample output below for an example.

Here is the main function I want you to use. Copy it into your project and do not modify
it in any way.

public static void main(String[] args) {
	List<Integer> list = new ArrayList<Integer>();
	fillList(list, 10); // Fills the list with 10 integers from 0 to 9
	System.out.println("Initial list: " + printList(list));
	randomizeList(list);
	System.out.println("Randomized list: " + printList(list));
	sortList(list);
	System.out.println("Sorted list: " + printList(list));
}
	
----------------
Sample Output:

Initial list: 0 1 2 3 4 5 6 7 8 9 
Randomized list: 9 4 8 7 2 1 5 0 3 6 
Sorting steps
4 9 8 7 2 1 5 0 3 6 
4 8 9 7 2 1 5 0 3 6 
4 7 8 9 2 1 5 0 3 6 
2 4 7 8 9 1 5 0 3 6 
1 2 4 7 8 9 5 0 3 6 
1 2 4 5 7 8 9 0 3 6 
0 1 2 4 5 7 8 9 3 6 
0 1 2 3 4 5 7 8 9 6 
0 1 2 3 4 5 6 7 8 9 
Sorted list: 0 1 2 3 4 5 6 7 8 9

----------------------------------------------------------------
Part 2

A palindromic number reads the same both ways. The largest palindrome made from the product
of two 2-digit numbers is 9009 = 91 Ã— 99.

Find the largest palindrome made from the product of two 3-digit numbers.

To solve this, it will be helpful to know the following functions
(Assume these two function calls are called one after the other)

String numberString = Integer.toString(98765); // numberString = "98765"
char character = numberString.charAt(2); // character = '7'

Check your answer with this app: https://drive.google.com/open?id=0BzwW07ekiVakTExzS1lOcjhRQUU